Service:
  RegionId: cn-hangzhou
  DeployType: ros
  DeployMetadata:
    ServiceInstanceNameRule:
      Prefix: ms-
    SupplierDeployMetadata:
      ArtifactRelation:
        'ecsImage':
          ArtifactId: ${Artifact.EcsImage.ArtifactId}
          ArtifactVersion: ${Artifact.EcsImage.ArtifactVersion}
    TemplateConfigs:
      - Name: ECS单机版
        Url: 'ros_templates/template.yaml'
        OutputConfigs:
          - OutputKey: VisitUrl
            EnableWebProxy: true
        ArchitectureDiagramUrl: 'docs/architecture.png'
        AllowedRegions:
          - cn-qingdao
          - cn-beijing
          - cn-zhangjiakou
          - cn-huhehaote
          - cn-wulanchabu
          - cn-hangzhou
          - cn-shanghai
          - cn-nanjing
          - cn-shenzhen
          - cn-heyuan
          - cn-guangzhou
          - cn-fuzhou
          - cn-wuhan-lr
          - cn-chengdu
          - cn-hongkong
          - ap-northeast-1
          - ap-northeast-2
          - ap-southeast-1
          - ap-southeast-3
          - ap-southeast-6
          - ap-southeast-5
          - ap-southeast-7
          - us-east-1
          - us-west-1
          - na-south-1
          - eu-west-1
          - me-east-1
          - me-central-1
          - eu-central-1
  ServiceType: private
  ServiceInfo:
    Locale: zh-CN
    ShortDescription: 本服务是一个基于创空间的模型服务。
    Image: 'resources/icons/service_logo.png'
    Name: 创空间服务
  ShareType: Public
  ApprovalType: Manual
Artifact:
  EcsImage:
    ArtifactType: EcsImage
    ArtifactName: EcsImage
    Description: EcsImage
    ArtifactBuildProperty:
      RegionId: ap-southeast-1
      SourceImageId: m-t4n7ttu9p7cbnxjlex02
      CommandContent: |-
        #!/bin/bash
        repo_url="https://www.modelscope.cn/studios/${ModelID}.git"
        repo_name=$(basename "$repo_url" .git)
        git clone "$repo_url" "/root/$repo_name"
    
        echo "" > /root/.env
        
        cat << EOF > /root/start_app.sh
        #!/bin/bash
        # 加载 .env 文件中的环境变量
        export \$(grep -v '^#' /root/.env | xargs)
        # 启动应用
        cd /root/$repo_name && python app.py
        EOF
        chmod +x /root/start_app.sh
    
        DOCKER_GPU_FLAG=""
    
        docker run -t -d \
        --entrypoint /bin/bash \
        --name=model \
        --ipc=host \
        --cap-add=SYS_PTRACE \
        $DOCKER_GPU_FLAG \
        --privileged \
        --ulimit memlock=-1 \
        --ulimit stack=67108864 \
        -p 7860:7860 \
        -e GRADIO_SERVER_NAME=0.0.0.0 \
        -e GRADIO_SERVER_PORT=7860 \
        --env-file /root/.env \
        -v /root:/root \
        modelscope-registry.us-west-1.cr.aliyuncs.com/modelscope-repo/modelscope:ubuntu22.04-cuda12.1.0-py311-torch2.3.1-tf2.16.1-1.26.0
        
        docker exec model sh -c "if [ -f /root/$repo_name/requirements.txt ]; then cd /root/$repo_name && pip install --no-cache-dir -r requirements.txt; fi"
        
        docker exec model bash -c "/root/start_app.sh" 2>&1 | stdbuf -oL tee /dev/tty | {
            last_output_time=$(date +%s)
            timeout=15

            ( 
                while true; do
                    current_time=$(date +%s)
                    elapsed_time=$((current_time - last_output_time))
                    if [ "$elapsed_time" -ge "$timeout" ]; then
                        echo "超时（$timeout 秒内无输出），准备终止命令..."

                        PIDS=$(docker exec model ps aux | grep -E "/bin/bash /root/start_app.sh|python app.py" | grep -v grep | awk '{print $2}')

                        if [ -n "$PIDS" ]; then
                            docker exec model kill -INT $PIDS
                            echo "已发送 SIGINT 到 PID: $PIDS"

                            sleep 1

                            docker exec model kill -9 $PIDS 2>/dev/null
                            echo "已强制终止 PID: $PIDS"
                        fi
                        exit 1
                    fi
                    sleep 1
                done
            ) &

            while IFS= read -r line; do
                last_output_time=$(date +%s)
            done

            wait
        }

    SupportRegionIds:
      - cn-qingdao
      - cn-beijing
      - cn-zhangjiakou
      - cn-huhehaote
      - cn-wulanchabu
      - cn-hangzhou
      - cn-shanghai
      - cn-nanjing
      - cn-shenzhen
      - cn-heyuan
      - cn-guangzhou
      - cn-fuzhou
      - cn-wuhan-lr
      - cn-chengdu
      - cn-hongkong
      - ap-northeast-1
      - ap-northeast-2
      - ap-southeast-1
      - ap-southeast-3
      - ap-southeast-6
      - ap-southeast-5
      - ap-southeast-7
      - us-east-1
      - us-west-1
      - na-south-1
      - eu-west-1
      - me-east-1
      - me-central-1
      - eu-central-1